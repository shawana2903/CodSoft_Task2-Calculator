import ipywidgets as widgets
from IPython.display import display
from math import sqrt

# Create a text display for the calculator
display_output = widgets.Text(
    value='', 
    placeholder='0',
    description='', 
    disabled=False, 
    layout=widgets.Layout(width='100%', height='50px')
)

# Function to append values to the display
def append_to_display(val):
    current = display_output.value
    display_output.value = current + val

# Function to clear the display
def clear_display(button):
    display_output.value = ''

# Function to evaluate the expression entered
def evaluate_expression(button):
    try:
        result = eval(display_output.value)
        display_output.value = str(result)
    except Exception as e:
        display_output.value = 'Error'

# Create buttons
buttons = [
    '7', '8', '9', '/',
    '4', '5', '6', '*',
    '1', '2', '3', '-',
    '0', '.', '+', '='
]

# Create button widgets and associate them with their respective functions
button_widgets = []
for button in buttons:
    if button == '=':
        btn = widgets.Button(description=button, layout=widgets.Layout(width='100%', height='50px'), style={'button_color': '#4caf50'})
        btn.on_click(evaluate_expression)
    else:
        btn = widgets.Button(description=button, layout=widgets.Layout(width='100%', height='50px'))
        btn.on_click(lambda b, button=button: append_to_display(button))
    button_widgets.append(btn)

# Create special button (clear) and make it span the entire last row
clear_button = widgets.Button(
    description="Clear", 
    layout=widgets.Layout(width='100%', height='50px', grid_column='span 4'),  # Span across 4 columns
    style={'button_color': '#f44336'}
)
clear_button.on_click(clear_display)

# Layout for calculator buttons
button_grid = widgets.GridBox(
    children=button_widgets + [clear_button], 
    layout=widgets.Layout(
        grid_template_columns='repeat(4, 100px)',
        grid_template_rows='auto',
        grid_gap='10px'
    )
)

# Display the calculator interface
display(display_output)
display(button_grid)